Local Setup Documentation — Enabling Hypervisor and Installing Ubuntu (WSL2)

✅ BIOS Configuration

Reboot into BIOS.

Locate and enable SVM (Secure Virtual Machine) or Intel VT-x/AMD-V — terminology may vary by manufacturer.

✅ Enable WSL and Virtual Machine Platform

Run the following in an elevated PowerShell terminal:

wsl --install --no-distribution

Or manually:

dism.exe /online /enable-feature /featurename:Microsoft-Windows-Subsystem-Linux /all /norestart
dism.exe /online /enable-feature /featurename:VirtualMachinePlatform /all /norestart

Then reboot your system.

✅ Install Ubuntu

Open Microsoft Store and install Ubuntu 22.04 LTS (or preferred version).

Launch Ubuntu and set your new UNIX username and password.

✅ Install Docker Engine (not Docker Desktop)

1. Remove any old Docker installs:

sudo apt-get remove docker docker-engine docker.io containerd runc

2. Install required dependencies:

sudo apt-get update
sudo apt-get install -y \
    ca-certificates \
    curl \
    gnupg \
    lsb-release

3. Add Docker's official GPG key:

sudo mkdir -p /etc/apt/keyrings
curl -fsSL https://download.docker.com/linux/ubuntu/gpg | \
  sudo gpg --dearmor -o /etc/apt/keyrings/docker.gpg

4. Set up Docker repository:

echo \
  "deb [arch=$(dpkg --print-architecture) signed-by=/etc/apt/keyrings/docker.gpg] \
  https://download.docker.com/linux/ubuntu \
  $(lsb_release -cs) stable" | \
  sudo tee /etc/apt/sources.list.d/docker.list > /dev/null

5. Install Docker Engine:

sudo apt-get update
sudo apt-get install -y docker-ce docker-ce-cli containerd.io docker-buildx-plugin docker-compose-plugin

6. Run Docker test image:

sudo docker run hello-world

7. (Optional) Use Docker without sudo:

sudo usermod -aG docker $USER
exec su -l $USER

Then test again:

docker run hello-world

Ready for containerization and k3d setup!